{"version":3,"file":"writeToStore.js","sources":["writeToStore.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { invariant } from 'ts-invariant';\nimport { createFragmentMap, getFragmentFromSelection, } from '../../utilities/graphql/fragments';\nimport { getDefaultValues, getFragmentDefinitions, getOperationDefinition, } from '../../utilities/graphql/getFromAST';\nimport { getTypenameFromResult, makeReference, isField, resultKeyNameFromField, } from '../../utilities/graphql/storeUtils';\nimport { shouldInclude } from '../../utilities/graphql/directives';\nimport { cloneDeep } from '../../utilities/common/cloneDeep';\nimport { EntityStore } from './entityStore';\nimport { makeProcessedFieldsMerger } from './helpers';\n;\n;\nvar StoreWriter = (function () {\n    function StoreWriter(config) {\n        this.policies = config.policies;\n    }\n    StoreWriter.prototype.writeQueryToStore = function (_a) {\n        var query = _a.query, result = _a.result, _b = _a.dataId, dataId = _b === void 0 ? 'ROOT_QUERY' : _b, _c = _a.store, store = _c === void 0 ? new EntityStore.Root({\n            policies: this.policies,\n        }) : _c, variables = _a.variables;\n        var operationDefinition = getOperationDefinition(query);\n        store.retain(dataId);\n        var merger = makeProcessedFieldsMerger();\n        return this.writeSelectionSetToStore({\n            result: result || Object.create(null),\n            dataId: dataId,\n            selectionSet: operationDefinition.selectionSet,\n            context: {\n                store: store,\n                written: Object.create(null),\n                merge: function (existing, incoming) {\n                    return merger.merge(existing, incoming);\n                },\n                variables: __assign(__assign({}, getDefaultValues(operationDefinition)), variables),\n                fragmentMap: createFragmentMap(getFragmentDefinitions(query)),\n                toReference: store.toReference,\n                getFieldValue: store.getFieldValue,\n            },\n        });\n    };\n    StoreWriter.prototype.writeSelectionSetToStore = function (_a) {\n        var dataId = _a.dataId, result = _a.result, selectionSet = _a.selectionSet, context = _a.context;\n        var policies = this.policies;\n        var store = context.store, written = context.written;\n        var sets = written[dataId] || (written[dataId] = []);\n        if (sets.indexOf(selectionSet) >= 0)\n            return store;\n        sets.push(selectionSet);\n        var typename = getTypenameFromResult(result, selectionSet, context.fragmentMap) ||\n            store.get(dataId, \"__typename\");\n        var out = Object.create(null);\n        var processed = this.processSelectionSet({\n            result: result,\n            selectionSet: selectionSet,\n            context: context,\n            typename: typename,\n            out: out,\n        });\n        if (out.shouldApplyMerges) {\n            processed = policies.applyMerges(makeReference(dataId), processed, context);\n        }\n        store.merge(dataId, processed);\n        return store;\n    };\n    StoreWriter.prototype.processSelectionSet = function (_a) {\n        var _this = this;\n        var result = _a.result, selectionSet = _a.selectionSet, context = _a.context, typename = _a.typename, out = _a.out;\n        var mergedFields = Object.create(null);\n        if (typeof typename === \"string\") {\n            mergedFields.__typename = typename;\n        }\n        var policies = this.policies;\n        var workSet = new Set(selectionSet.selections);\n        workSet.forEach(function (selection) {\n            var _a;\n            if (!shouldInclude(selection, context.variables))\n                return;\n            if (isField(selection)) {\n                var resultFieldKey = resultKeyNameFromField(selection);\n                var value = result[resultFieldKey];\n                if (typeof value !== 'undefined') {\n                    var storeFieldName = policies.getStoreFieldName(typename, selection, context.variables);\n                    var incomingValue = _this.processFieldValue(value, selection, context, out);\n                    if (policies.hasMergeFunction(typename, selection.name.value)) {\n                        incomingValue = {\n                            __field: selection,\n                            __typename: typename,\n                            __value: incomingValue,\n                        };\n                        out.shouldApplyMerges = true;\n                    }\n                    mergedFields = context.merge(mergedFields, (_a = {},\n                        _a[storeFieldName] = incomingValue,\n                        _a));\n                }\n                else if (policies.usingPossibleTypes &&\n                    !(selection.directives &&\n                        selection.directives.some(function (_a) {\n                            var name = _a.name;\n                            return name && (name.value === 'defer' || name.value === 'client');\n                        }))) {\n                    invariant.warn(\"Missing field \" + resultFieldKey + \" in \" + JSON.stringify(result, null, 2).substring(0, 100));\n                }\n            }\n            else {\n                var fragment = getFragmentFromSelection(selection, context.fragmentMap);\n                if (policies.fragmentMatches(fragment, typename)) {\n                    fragment.selectionSet.selections.forEach(workSet.add, workSet);\n                }\n            }\n        });\n        return mergedFields;\n    };\n    StoreWriter.prototype.processFieldValue = function (value, field, context, out) {\n        var _this = this;\n        if (!field.selectionSet || value === null) {\n            return process.env.NODE_ENV === 'production' ? value : cloneDeep(value);\n        }\n        if (Array.isArray(value)) {\n            return value.map(function (item, i) { return _this.processFieldValue(item, field, context, out); });\n        }\n        if (value) {\n            var dataId = this.policies.identify(value, field.selectionSet, context.fragmentMap);\n            if (typeof dataId === 'string') {\n                this.writeSelectionSetToStore({\n                    dataId: dataId,\n                    result: value,\n                    selectionSet: field.selectionSet,\n                    context: context,\n                });\n                return makeReference(dataId);\n            }\n        }\n        return this.processSelectionSet({\n            result: value,\n            selectionSet: field.selectionSet,\n            context: context,\n            typename: getTypenameFromResult(value, field.selectionSet, context.fragmentMap),\n            out: out,\n        });\n    };\n    return StoreWriter;\n}());\nexport { StoreWriter };\n//# sourceMappingURL=writeToStore.js.map"],"names":[],"mappings":"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"}