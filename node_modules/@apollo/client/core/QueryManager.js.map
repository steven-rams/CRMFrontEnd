{"version":3,"file":"QueryManager.js","sources":["QueryManager.js"],"sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\nimport { invariant, InvariantError } from 'ts-invariant';\nimport { execute } from '../link/core/execute';\nimport { getDefaultValues, getOperationDefinition, getOperationName, } from '../utilities/graphql/getFromAST';\nimport { hasDirectives, hasClientExports, } from '../utilities/graphql/directives';\nimport { graphQLResultHasError, tryFunctionOrLogError, } from '../utilities/common/errorHandling';\nimport { removeConnectionDirectiveFromDocument } from '../utilities/graphql/transform';\nimport { canUseWeakMap } from '../utilities/common/canUse';\nimport { isApolloError, ApolloError } from '../errors/ApolloError';\nimport { Observable, } from '../utilities/observables/Observable';\nimport { MutationStore } from '../data/mutations';\nimport { ObservableQuery } from './ObservableQuery';\nimport { NetworkStatus, isNetworkRequestInFlight } from './networkStatus';\nimport { FetchType, } from './types';\nimport { LocalState } from './LocalState';\nimport { asyncMap, multiplex } from '../utilities/observables/observables';\nimport { isNonEmptyArray } from '../utilities/common/arrays';\nimport { QueryInfo } from './QueryInfo';\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar QueryManager = (function () {\n    function QueryManager(_a) {\n        var cache = _a.cache, link = _a.link, _b = _a.queryDeduplication, queryDeduplication = _b === void 0 ? false : _b, _c = _a.onBroadcast, onBroadcast = _c === void 0 ? function () { return undefined; } : _c, _d = _a.ssrMode, ssrMode = _d === void 0 ? false : _d, _e = _a.clientAwareness, clientAwareness = _e === void 0 ? {} : _e, localState = _a.localState, assumeImmutableResults = _a.assumeImmutableResults;\n        this.mutationStore = new MutationStore();\n        this.clientAwareness = {};\n        this.idCounter = 1;\n        this.queries = new Map();\n        this.fetchQueryRejectFns = new Map();\n        this.transformCache = new (canUseWeakMap ? WeakMap : Map)();\n        this.inFlightLinkObservables = new Map();\n        this.pollingInfoByQueryId = new Map();\n        this.cache = cache;\n        this.link = link;\n        this.queryDeduplication = queryDeduplication;\n        this.onBroadcast = onBroadcast;\n        this.clientAwareness = clientAwareness;\n        this.localState = localState || new LocalState({ cache: cache });\n        this.ssrMode = ssrMode;\n        this.assumeImmutableResults = !!assumeImmutableResults;\n    }\n    QueryManager.prototype.stop = function () {\n        var _this = this;\n        this.queries.forEach(function (_info, queryId) {\n            _this.stopQueryNoBroadcast(queryId);\n        });\n        this.fetchQueryRejectFns.forEach(function (reject) {\n            reject(new InvariantError('QueryManager stopped while query was in flight'));\n        });\n    };\n    QueryManager.prototype.mutate = function (_a) {\n        var mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, updateQueriesByName = _a.updateQueries, _b = _a.refetchQueries, refetchQueries = _b === void 0 ? [] : _b, _c = _a.awaitRefetchQueries, awaitRefetchQueries = _c === void 0 ? false : _c, updateWithProxyFn = _a.update, _d = _a.errorPolicy, errorPolicy = _d === void 0 ? 'none' : _d, fetchPolicy = _a.fetchPolicy, _e = _a.context, context = _e === void 0 ? {} : _e;\n        return __awaiter(this, void 0, void 0, function () {\n            var mutationId, generateUpdateQueriesInfo, optimistic_1, self;\n            var _this = this;\n            return __generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0:\n                        invariant(mutation, 'mutation option is required. You must specify your GraphQL document in the mutation option.');\n                        invariant(!fetchPolicy || fetchPolicy === 'no-cache', \"Mutations only support a 'no-cache' fetchPolicy. If you don't want to disable the cache, remove your fetchPolicy setting to proceed with the default mutation behavior.\");\n                        mutationId = this.generateQueryId();\n                        mutation = this.transform(mutation).document;\n                        variables = this.getVariables(mutation, variables);\n                        if (!this.transform(mutation).hasClientExports) return [3, 2];\n                        return [4, this.localState.addExportedVariables(mutation, variables, context)];\n                    case 1:\n                        variables = _f.sent();\n                        _f.label = 2;\n                    case 2:\n                        generateUpdateQueriesInfo = function () {\n                            var ret = {};\n                            if (updateQueriesByName) {\n                                _this.queries.forEach(function (_a, queryId) {\n                                    var observableQuery = _a.observableQuery;\n                                    if (observableQuery &&\n                                        observableQuery.watching) {\n                                        var queryName = observableQuery.queryName;\n                                        if (queryName &&\n                                            hasOwnProperty.call(updateQueriesByName, queryName)) {\n                                            ret[queryId] = {\n                                                updater: updateQueriesByName[queryName],\n                                                queryInfo: _this.queries.get(queryId),\n                                            };\n                                        }\n                                    }\n                                });\n                            }\n                            return ret;\n                        };\n                        this.mutationStore.initMutation(mutationId, mutation, variables);\n                        if (optimisticResponse) {\n                            optimistic_1 = typeof optimisticResponse === 'function'\n                                ? optimisticResponse(variables)\n                                : optimisticResponse;\n                            this.cache.recordOptimisticTransaction(function (cache) {\n                                markMutationResult({\n                                    mutationId: mutationId,\n                                    result: { data: optimistic_1 },\n                                    document: mutation,\n                                    variables: variables,\n                                    queryUpdatersById: generateUpdateQueriesInfo(),\n                                    update: updateWithProxyFn,\n                                }, cache);\n                            }, mutationId);\n                        }\n                        this.broadcastQueries();\n                        self = this;\n                        return [2, new Promise(function (resolve, reject) {\n                                var storeResult;\n                                var error;\n                                self.getObservableFromLink(mutation, __assign(__assign({}, context), { optimisticResponse: optimisticResponse }), variables, false).subscribe({\n                                    next: function (result) {\n                                        if (graphQLResultHasError(result) && errorPolicy === 'none') {\n                                            error = new ApolloError({\n                                                graphQLErrors: result.errors,\n                                            });\n                                            return;\n                                        }\n                                        self.mutationStore.markMutationResult(mutationId);\n                                        if (fetchPolicy !== 'no-cache') {\n                                            markMutationResult({\n                                                mutationId: mutationId,\n                                                result: result,\n                                                document: mutation,\n                                                variables: variables,\n                                                queryUpdatersById: generateUpdateQueriesInfo(),\n                                                update: updateWithProxyFn,\n                                            }, self.cache);\n                                        }\n                                        storeResult = result;\n                                    },\n                                    error: function (err) {\n                                        self.mutationStore.markMutationError(mutationId, err);\n                                        if (optimisticResponse) {\n                                            self.cache.removeOptimistic(mutationId);\n                                        }\n                                        self.broadcastQueries();\n                                        reject(new ApolloError({\n                                            networkError: err,\n                                        }));\n                                    },\n                                    complete: function () {\n                                        if (error) {\n                                            self.mutationStore.markMutationError(mutationId, error);\n                                        }\n                                        if (optimisticResponse) {\n                                            self.cache.removeOptimistic(mutationId);\n                                        }\n                                        self.broadcastQueries();\n                                        if (error) {\n                                            reject(error);\n                                            return;\n                                        }\n                                        if (typeof refetchQueries === 'function') {\n                                            refetchQueries = refetchQueries(storeResult);\n                                        }\n                                        var refetchQueryPromises = [];\n                                        if (isNonEmptyArray(refetchQueries)) {\n                                            refetchQueries.forEach(function (refetchQuery) {\n                                                if (typeof refetchQuery === 'string') {\n                                                    self.queries.forEach(function (_a) {\n                                                        var observableQuery = _a.observableQuery;\n                                                        if (observableQuery &&\n                                                            observableQuery.watching &&\n                                                            observableQuery.queryName === refetchQuery) {\n                                                            refetchQueryPromises.push(observableQuery.refetch());\n                                                        }\n                                                    });\n                                                }\n                                                else {\n                                                    var queryOptions = {\n                                                        query: refetchQuery.query,\n                                                        variables: refetchQuery.variables,\n                                                        fetchPolicy: 'network-only',\n                                                    };\n                                                    if (refetchQuery.context) {\n                                                        queryOptions.context = refetchQuery.context;\n                                                    }\n                                                    refetchQueryPromises.push(self.query(queryOptions));\n                                                }\n                                            });\n                                        }\n                                        Promise.all(awaitRefetchQueries ? refetchQueryPromises : []).then(function () {\n                                            if (errorPolicy === 'ignore' &&\n                                                storeResult &&\n                                                graphQLResultHasError(storeResult)) {\n                                                delete storeResult.errors;\n                                            }\n                                            resolve(storeResult);\n                                        });\n                                    },\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    QueryManager.prototype.fetchQuery = function (queryId, options, fetchType, fetchMoreForQueryId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, fetchPolicy, _b, context, query, variables, storeResult, isNetworkOnly, needToFetch, _c, complete, result, shouldFetch, requestId, queryInfo, networkResult;\n            var _this = this;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _a = options.fetchPolicy, fetchPolicy = _a === void 0 ? 'cache-first' : _a, _b = options.context, context = _b === void 0 ? {} : _b;\n                        query = this.transform(options.query).document;\n                        variables = this.getVariables(query, options.variables);\n                        if (!this.transform(query).hasClientExports) return [3, 2];\n                        return [4, this.localState.addExportedVariables(query, variables, context)];\n                    case 1:\n                        variables = _d.sent();\n                        _d.label = 2;\n                    case 2:\n                        options = __assign(__assign({}, options), { variables: variables });\n                        isNetworkOnly = fetchPolicy === 'network-only' || fetchPolicy === 'no-cache';\n                        needToFetch = isNetworkOnly;\n                        if (!isNetworkOnly) {\n                            _c = this.cache.diff({\n                                query: query,\n                                variables: variables,\n                                returnPartialData: true,\n                                optimistic: false,\n                            }), complete = _c.complete, result = _c.result;\n                            needToFetch = !complete || fetchPolicy === 'cache-and-network';\n                            storeResult = result;\n                        }\n                        shouldFetch = needToFetch && fetchPolicy !== 'cache-only' && fetchPolicy !== 'standby';\n                        if (hasDirectives(['live'], query))\n                            shouldFetch = true;\n                        requestId = this.idCounter++;\n                        queryInfo = this.getQuery(queryId).init({\n                            document: query,\n                            variables: variables,\n                            isPoll: fetchType === FetchType.poll,\n                            isRefetch: fetchType === FetchType.refetch,\n                            lastRequestId: requestId,\n                        }).updateWatch(options);\n                        this.dirty(queryId);\n                        this.dirty(fetchMoreForQueryId);\n                        this.setNetStatus(fetchMoreForQueryId, NetworkStatus.fetchMore);\n                        if (shouldFetch) {\n                            this.broadcastQueries();\n                            networkResult = this.fetchRequest({\n                                requestId: requestId,\n                                queryId: queryId,\n                                document: query,\n                                options: options,\n                                fetchMoreForQueryId: fetchMoreForQueryId,\n                            }).catch(function (error) {\n                                if (isApolloError(error)) {\n                                    throw error;\n                                }\n                                else {\n                                    if (requestId >= _this.getQuery(queryId).lastRequestId) {\n                                        queryInfo.markError(error);\n                                        _this.setNetStatus(fetchMoreForQueryId, NetworkStatus.ready);\n                                        _this.dirty(queryId);\n                                        _this.dirty(fetchMoreForQueryId);\n                                        _this.broadcastQueries();\n                                    }\n                                    throw new ApolloError({ networkError: error });\n                                }\n                            });\n                            if (fetchPolicy !== 'cache-and-network') {\n                                return [2, networkResult];\n                            }\n                            networkResult.catch(function () { });\n                        }\n                        this.setNetStatus(queryId, shouldFetch ? queryInfo.networkStatus : NetworkStatus.ready);\n                        this.dirty(queryId);\n                        this.dirty(fetchMoreForQueryId);\n                        if (this.transform(query).hasForcedResolvers) {\n                            return [2, this.localState.runResolvers({\n                                    document: query,\n                                    remoteResult: { data: storeResult },\n                                    context: context,\n                                    variables: variables,\n                                    onlyRunForcedResolvers: true,\n                                }).then(function (result) {\n                                    queryInfo.markResult(result, options, !fetchMoreForQueryId, false);\n                                    _this.broadcastQueries();\n                                    return result;\n                                })];\n                        }\n                        this.broadcastQueries();\n                        return [2, { data: storeResult }];\n                }\n            });\n        });\n    };\n    QueryManager.prototype.getQueryStore = function () {\n        var store = Object.create(null);\n        this.queries.forEach(function (info, queryId) {\n            store[queryId] = {\n                variables: info.variables,\n                networkStatus: info.networkStatus,\n                networkError: info.networkError,\n                graphQLErrors: info.graphQLErrors,\n            };\n        });\n        return store;\n    };\n    QueryManager.prototype.getQueryStoreValue = function (queryId) {\n        return queryId && this.queries.get(queryId);\n    };\n    QueryManager.prototype.setNetStatus = function (queryId, status) {\n        var queryInfo = queryId && this.getQuery(queryId);\n        if (queryInfo) {\n            queryInfo.networkStatus = status;\n            if (status === NetworkStatus.ready) {\n                queryInfo.networkError = null;\n            }\n        }\n    };\n    QueryManager.prototype.queryListenerForObserver = function (queryId, observer) {\n        return function (info) {\n            var observableQuery = info.observableQuery, networkStatus = info.networkStatus, networkError = info.networkError, graphQLErrors = info.graphQLErrors;\n            var _a = observableQuery.options, fetchPolicy = _a.fetchPolicy, _b = _a.errorPolicy, errorPolicy = _b === void 0 ? 'none' : _b, returnPartialData = _a.returnPartialData, partialRefetch = _a.partialRefetch;\n            var hasGraphQLErrors = isNonEmptyArray(graphQLErrors);\n            if (errorPolicy === 'none' && hasGraphQLErrors || networkError) {\n                observer.error(new ApolloError({\n                    graphQLErrors: graphQLErrors,\n                    networkError: networkError,\n                }));\n                return;\n            }\n            var diff = info.getDiff();\n            var stale = !diff.complete && !(returnPartialData ||\n                partialRefetch ||\n                fetchPolicy === 'cache-only');\n            var lastResult = observableQuery.getLastResult();\n            var resultFromStore = {\n                data: stale ? lastResult && lastResult.data : diff.result,\n                loading: isNetworkRequestInFlight(networkStatus),\n                networkStatus: networkStatus,\n                stale: stale,\n            };\n            if (errorPolicy === 'all' && hasGraphQLErrors) {\n                resultFromStore.errors = graphQLErrors;\n            }\n            observer.next(resultFromStore);\n        };\n    };\n    QueryManager.prototype.transform = function (document) {\n        var transformCache = this.transformCache;\n        if (!transformCache.has(document)) {\n            var transformed = this.cache.transformDocument(document);\n            var forLink = removeConnectionDirectiveFromDocument(this.cache.transformForLink(transformed));\n            var clientQuery = this.localState.clientQuery(transformed);\n            var serverQuery = this.localState.serverQuery(forLink);\n            var cacheEntry_1 = {\n                document: transformed,\n                hasClientExports: hasClientExports(transformed),\n                hasForcedResolvers: this.localState.shouldForceResolvers(transformed),\n                clientQuery: clientQuery,\n                serverQuery: serverQuery,\n                defaultVars: getDefaultValues(getOperationDefinition(transformed)),\n            };\n            var add = function (doc) {\n                if (doc && !transformCache.has(doc)) {\n                    transformCache.set(doc, cacheEntry_1);\n                }\n            };\n            add(document);\n            add(transformed);\n            add(clientQuery);\n            add(serverQuery);\n        }\n        return transformCache.get(document);\n    };\n    QueryManager.prototype.getVariables = function (document, variables) {\n        return __assign(__assign({}, this.transform(document).defaultVars), variables);\n    };\n    QueryManager.prototype.watchQuery = function (options, shouldSubscribe) {\n        if (shouldSubscribe === void 0) { shouldSubscribe = true; }\n        options = __assign(__assign({}, options), { variables: this.getVariables(options.query, options.variables) });\n        if (typeof options.notifyOnNetworkStatusChange === 'undefined') {\n            options.notifyOnNetworkStatusChange = false;\n        }\n        var observable = new ObservableQuery({\n            queryManager: this,\n            options: options,\n            shouldSubscribe: shouldSubscribe,\n        });\n        this.getQuery(observable.queryId).init({\n            document: options.query,\n            observableQuery: observable,\n            variables: options.variables,\n            isPoll: false,\n            isRefetch: false,\n        });\n        return observable;\n    };\n    QueryManager.prototype.query = function (options) {\n        var _this = this;\n        invariant(options.query, 'query option is required. You must specify your GraphQL document ' +\n            'in the query option.');\n        invariant(options.query.kind === 'Document', 'You must wrap the query string in a \"gql\" tag.');\n        invariant(!options.returnPartialData, 'returnPartialData option only supported on watchQuery.');\n        invariant(!options.pollInterval, 'pollInterval option only supported on watchQuery.');\n        return new Promise(function (resolve, reject) {\n            var watchedQuery = _this.watchQuery(options, false);\n            _this.fetchQueryRejectFns.set(\"query:\" + watchedQuery.queryId, reject);\n            watchedQuery\n                .result()\n                .then(resolve, reject)\n                .then(function () {\n                return _this.fetchQueryRejectFns.delete(\"query:\" + watchedQuery.queryId);\n            });\n        });\n    };\n    QueryManager.prototype.generateQueryId = function () {\n        return String(this.idCounter++);\n    };\n    QueryManager.prototype.stopQueryInStore = function (queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryInStoreNoBroadcast = function (queryId) {\n        var queryInfo = this.queries.get(queryId);\n        if (queryInfo)\n            queryInfo.stop();\n        this.stopPollingQuery(queryId);\n    };\n    QueryManager.prototype.addQueryListener = function (queryId, listener) {\n        this.getQuery(queryId).listeners.add(listener);\n    };\n    QueryManager.prototype.clearStore = function () {\n        this.fetchQueryRejectFns.forEach(function (reject) {\n            reject(new InvariantError('Store reset while query was in flight (not completed in link chain)'));\n        });\n        this.queries.forEach(function (queryInfo, queryId) {\n            if (queryInfo.observableQuery &&\n                queryInfo.observableQuery.watching) {\n                queryInfo.networkStatus = NetworkStatus.loading;\n            }\n            else {\n                queryInfo.stop();\n            }\n        });\n        this.mutationStore.reset();\n        return this.cache.reset();\n    };\n    QueryManager.prototype.resetStore = function () {\n        var _this = this;\n        return this.clearStore().then(function () {\n            return _this.reFetchObservableQueries();\n        });\n    };\n    QueryManager.prototype.reFetchObservableQueries = function (includeStandby) {\n        var _this = this;\n        if (includeStandby === void 0) { includeStandby = false; }\n        var observableQueryPromises = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (observableQuery &&\n                observableQuery.watching) {\n                var fetchPolicy = observableQuery.options.fetchPolicy;\n                observableQuery.resetLastResults();\n                if (fetchPolicy !== 'cache-only' &&\n                    (includeStandby || fetchPolicy !== 'standby')) {\n                    observableQueryPromises.push(observableQuery.refetch());\n                }\n                _this.getQuery(queryId).setDiff(null);\n            }\n        });\n        this.broadcastQueries();\n        return Promise.all(observableQueryPromises);\n    };\n    QueryManager.prototype.observeQuery = function (observableQuery, observer) {\n        var queryId = observableQuery.queryId, options = observableQuery.options;\n        this.getQuery(queryId).observableQuery = observableQuery;\n        if (options.pollInterval) {\n            this.startPollingQuery(options, queryId);\n        }\n        this.addQueryListener(queryId, this.queryListenerForObserver(queryId, observer));\n        return this.fetchQuery(queryId, options);\n    };\n    QueryManager.prototype.startGraphQLSubscription = function (_a) {\n        var _this = this;\n        var query = _a.query, fetchPolicy = _a.fetchPolicy, variables = _a.variables;\n        query = this.transform(query).document;\n        variables = this.getVariables(query, variables);\n        var makeObservable = function (variables) {\n            return _this.getObservableFromLink(query, {}, variables, false).map(function (result) {\n                if (!fetchPolicy || fetchPolicy !== 'no-cache') {\n                    if (!graphQLResultHasError(result)) {\n                        _this.cache.write({\n                            query: query,\n                            result: result.data,\n                            dataId: 'ROOT_SUBSCRIPTION',\n                            variables: variables,\n                        });\n                    }\n                    _this.broadcastQueries();\n                }\n                if (graphQLResultHasError(result)) {\n                    throw new ApolloError({\n                        graphQLErrors: result.errors,\n                    });\n                }\n                return result;\n            });\n        };\n        if (this.transform(query).hasClientExports) {\n            var observablePromise_1 = this.localState.addExportedVariables(query, variables).then(makeObservable);\n            return new Observable(function (observer) {\n                var sub = null;\n                observablePromise_1.then(function (observable) { return sub = observable.subscribe(observer); }, observer.error);\n                return function () { return sub && sub.unsubscribe(); };\n            });\n        }\n        return makeObservable(variables);\n    };\n    QueryManager.prototype.stopQuery = function (queryId) {\n        this.stopQueryNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryNoBroadcast = function (queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.removeQuery(queryId);\n    };\n    QueryManager.prototype.removeQuery = function (queryId) {\n        this.fetchQueryRejectFns.delete(\"query:\" + queryId);\n        this.fetchQueryRejectFns.delete(\"fetchRequest:\" + queryId);\n        this.getQuery(queryId).subscriptions.forEach(function (x) { return x.unsubscribe(); });\n        this.queries.delete(queryId);\n    };\n    QueryManager.prototype.getCurrentQueryResult = function (observableQuery, optimistic) {\n        if (optimistic === void 0) { optimistic = true; }\n        var _a;\n        var _b = observableQuery.options, variables = _b.variables, query = _b.query, fetchPolicy = _b.fetchPolicy, returnPartialData = _b.returnPartialData;\n        var lastResult = observableQuery.getLastResult();\n        if (fetchPolicy === 'no-cache' ||\n            fetchPolicy === 'network-only') {\n            var diff = this.getQuery(observableQuery.queryId).getDiff();\n            return { data: (_a = diff) === null || _a === void 0 ? void 0 : _a.result, partial: false };\n        }\n        var _c = this.cache.diff({\n            query: query,\n            variables: variables,\n            previousResult: lastResult ? lastResult.data : undefined,\n            returnPartialData: true,\n            optimistic: optimistic,\n        }), result = _c.result, complete = _c.complete;\n        return {\n            data: (complete || returnPartialData) ? result : void 0,\n            partial: !complete,\n        };\n    };\n    QueryManager.prototype.getQueryWithPreviousResult = function (queryIdOrObservable) {\n        var observableQuery;\n        if (typeof queryIdOrObservable === 'string') {\n            var foundObservableQuery = this.getQuery(queryIdOrObservable).observableQuery;\n            invariant(foundObservableQuery, \"ObservableQuery with this id doesn't exist: \" + queryIdOrObservable);\n            observableQuery = foundObservableQuery;\n        }\n        else {\n            observableQuery = queryIdOrObservable;\n        }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query;\n        return {\n            previousResult: this.getCurrentQueryResult(observableQuery, false).data,\n            variables: variables,\n            document: query,\n        };\n    };\n    QueryManager.prototype.broadcastQueries = function () {\n        this.onBroadcast();\n        this.queries.forEach(function (info) { return info.notify(); });\n    };\n    QueryManager.prototype.getLocalState = function () {\n        return this.localState;\n    };\n    QueryManager.prototype.getObservableFromLink = function (query, context, variables, deduplication) {\n        var _this = this;\n        if (deduplication === void 0) { deduplication = this.queryDeduplication; }\n        var observable;\n        var serverQuery = this.transform(query).serverQuery;\n        if (serverQuery) {\n            var _a = this, inFlightLinkObservables_1 = _a.inFlightLinkObservables, link = _a.link;\n            var operation = {\n                query: serverQuery,\n                variables: variables,\n                operationName: getOperationName(serverQuery) || void 0,\n                context: this.prepareContext(__assign(__assign({}, context), { forceFetch: !deduplication })),\n            };\n            context = operation.context;\n            if (deduplication) {\n                var byVariables_1 = inFlightLinkObservables_1.get(serverQuery) || new Map();\n                inFlightLinkObservables_1.set(serverQuery, byVariables_1);\n                var varJson_1 = JSON.stringify(variables);\n                observable = byVariables_1.get(varJson_1);\n                if (!observable) {\n                    byVariables_1.set(varJson_1, observable = multiplex(execute(link, operation)));\n                    var cleanup = function () {\n                        byVariables_1.delete(varJson_1);\n                        if (!byVariables_1.size)\n                            inFlightLinkObservables_1.delete(serverQuery);\n                        cleanupSub_1.unsubscribe();\n                    };\n                    var cleanupSub_1 = observable.subscribe({\n                        next: cleanup,\n                        error: cleanup,\n                        complete: cleanup,\n                    });\n                }\n            }\n            else {\n                observable = multiplex(execute(link, operation));\n            }\n        }\n        else {\n            observable = Observable.of({ data: {} });\n            context = this.prepareContext(context);\n        }\n        var clientQuery = this.transform(query).clientQuery;\n        if (clientQuery) {\n            observable = asyncMap(observable, function (result) {\n                return _this.localState.runResolvers({\n                    document: clientQuery,\n                    remoteResult: result,\n                    context: context,\n                    variables: variables,\n                });\n            });\n        }\n        return observable;\n    };\n    QueryManager.prototype.fetchRequest = function (_a) {\n        var _this = this;\n        var requestId = _a.requestId, queryId = _a.queryId, document = _a.document, options = _a.options, fetchMoreForQueryId = _a.fetchMoreForQueryId;\n        var variables = options.variables, _b = options.errorPolicy, errorPolicy = _b === void 0 ? 'none' : _b, fetchPolicy = options.fetchPolicy;\n        var resultFromStore;\n        var errorsFromStore;\n        return new Promise(function (resolve, reject) {\n            var observable = _this.getObservableFromLink(document, options.context, variables);\n            var subs = _this.getQuery(queryId).subscriptions;\n            var fqrfId = \"fetchRequest:\" + queryId;\n            _this.fetchQueryRejectFns.set(fqrfId, reject);\n            var cleanup = function () {\n                _this.fetchQueryRejectFns.delete(fqrfId);\n                subs.delete(subscription);\n            };\n            var subscription = observable.map(function (result) {\n                var queryInfo = _this.getQuery(queryId);\n                if (requestId >= queryInfo.lastRequestId) {\n                    queryInfo.markResult(result, options, !fetchMoreForQueryId, true);\n                    _this.setNetStatus(fetchMoreForQueryId, NetworkStatus.ready);\n                    _this.dirty(queryId);\n                    _this.dirty(fetchMoreForQueryId);\n                    _this.broadcastQueries();\n                }\n                if (errorPolicy === 'none' && isNonEmptyArray(result.errors)) {\n                    return reject(new ApolloError({\n                        graphQLErrors: result.errors,\n                    }));\n                }\n                if (errorPolicy === 'all') {\n                    errorsFromStore = result.errors;\n                }\n                if (fetchMoreForQueryId || fetchPolicy === 'no-cache') {\n                    resultFromStore = result.data;\n                }\n                else {\n                    var _a = _this.cache.diff({\n                        variables: variables,\n                        query: document,\n                        optimistic: false,\n                        returnPartialData: true,\n                    }), result_1 = _a.result, complete = _a.complete;\n                    if (complete || options.returnPartialData) {\n                        resultFromStore = result_1;\n                    }\n                }\n            }).subscribe({\n                error: function (error) {\n                    cleanup();\n                    reject(error);\n                },\n                complete: function () {\n                    cleanup();\n                    resolve({\n                        data: resultFromStore,\n                        errors: errorsFromStore,\n                        loading: false,\n                        networkStatus: NetworkStatus.ready,\n                        stale: false,\n                    });\n                },\n            });\n            subs.add(subscription);\n        });\n    };\n    QueryManager.prototype.getQuery = function (queryId) {\n        if (queryId && !this.queries.has(queryId)) {\n            this.queries.set(queryId, new QueryInfo(this.cache));\n        }\n        return this.queries.get(queryId);\n    };\n    QueryManager.prototype.dirty = function (queryId) {\n        if (queryId) {\n            this.getQuery(queryId).setDirty();\n        }\n    };\n    QueryManager.prototype.prepareContext = function (context) {\n        if (context === void 0) { context = {}; }\n        var newContext = this.localState.prepareContext(context);\n        return __assign(__assign({}, newContext), { clientAwareness: this.clientAwareness });\n    };\n    QueryManager.prototype.checkInFlight = function (queryId) {\n        var query = this.getQueryStoreValue(queryId);\n        return (query &&\n            query.networkStatus &&\n            query.networkStatus !== NetworkStatus.ready &&\n            query.networkStatus !== NetworkStatus.error);\n    };\n    QueryManager.prototype.startPollingQuery = function (options, queryId) {\n        var _this = this;\n        var pollInterval = options.pollInterval;\n        invariant(pollInterval, 'Attempted to start a polling query without a polling interval.');\n        if (!this.ssrMode) {\n            var info = this.pollingInfoByQueryId.get(queryId);\n            if (!info) {\n                this.pollingInfoByQueryId.set(queryId, (info = {}));\n            }\n            info.interval = pollInterval;\n            info.options = __assign(__assign({}, options), { fetchPolicy: 'network-only' });\n            var maybeFetch_1 = function () {\n                var info = _this.pollingInfoByQueryId.get(queryId);\n                if (info) {\n                    if (_this.checkInFlight(queryId)) {\n                        poll_1();\n                    }\n                    else {\n                        _this.fetchQuery(queryId, info.options, FetchType.poll).then(poll_1, poll_1);\n                    }\n                }\n            };\n            var poll_1 = function () {\n                var info = _this.pollingInfoByQueryId.get(queryId);\n                if (info) {\n                    clearTimeout(info.timeout);\n                    info.timeout = setTimeout(maybeFetch_1, info.interval);\n                }\n            };\n            poll_1();\n        }\n        return queryId;\n    };\n    QueryManager.prototype.stopPollingQuery = function (queryId) {\n        this.pollingInfoByQueryId.delete(queryId);\n    };\n    return QueryManager;\n}());\nexport { QueryManager };\nfunction markMutationResult(mutation, cache) {\n    if (!graphQLResultHasError(mutation.result)) {\n        var cacheWrites_1 = [{\n                result: mutation.result.data,\n                dataId: 'ROOT_MUTATION',\n                query: mutation.document,\n                variables: mutation.variables,\n            }];\n        var queryUpdatersById_1 = mutation.queryUpdatersById;\n        if (queryUpdatersById_1) {\n            Object.keys(queryUpdatersById_1).forEach(function (id) {\n                var _a = queryUpdatersById_1[id], updater = _a.updater, _b = _a.queryInfo, document = _b.document, variables = _b.variables;\n                var _c = cache.diff({\n                    query: document,\n                    variables: variables,\n                    returnPartialData: true,\n                    optimistic: false,\n                }), currentQueryResult = _c.result, complete = _c.complete;\n                if (complete) {\n                    var nextQueryResult = tryFunctionOrLogError(function () { return updater(currentQueryResult, {\n                        mutationResult: mutation.result,\n                        queryName: getOperationName(document) || undefined,\n                        queryVariables: variables,\n                    }); });\n                    if (nextQueryResult) {\n                        cacheWrites_1.push({\n                            result: nextQueryResult,\n                            dataId: 'ROOT_QUERY',\n                            query: document,\n                            variables: variables,\n                        });\n                    }\n                }\n            });\n        }\n        cache.performTransaction(function (c) {\n            cacheWrites_1.forEach(function (write) { return c.write(write); });\n            var update = mutation.update;\n            if (update) {\n                tryFunctionOrLogError(function () { return update(c, mutation.result); });\n            }\n        });\n    }\n}\n//# sourceMappingURL=QueryManager.js.map"],"names":[],"mappings":"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"}